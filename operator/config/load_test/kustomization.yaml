# The main purpose of this dedicated kustomization is to have separate resources configuration for load tests. Unlike the default setup, it enables the ability to configure additional components that we do not want in the default configuration (e.g. vendor-specific gateway implementation) but want to test for load anyhow.
resources:
  - metrics_cluster_role_binding.yaml
  - metrics_role.yaml
  - metrics_role_binding.yaml
  - ../manager
generatorOptions:
  disableNameSuffixHash: true

# Adds namespace to all resources.
namespace: kcp-system
namePrefix: lifecycle-manager-

# Labels to add to all resources and selectors.
commonLabels:
  app.kubernetes.io/component: lifecycle-manager.kyma-project.io
  app.kubernetes.io/instance: kcp-lifecycle-manager-main
  app.kubernetes.io/name: kcp-lifecycle-manager
  app.kubernetes.io/created-by: kustomize
  app.kubernetes.io/managed-by: kustomize
  app.kubernetes.io/part-of: manual-deployment

patchesJson6902:
  - target:
      version: v1beta1
      kind: Gateway
      name: lifecycle-manager-kyma-gateway
    path: patches/gateway_namespace_replace.yaml

patchesStrategicMerge:
  # We expect an istio gateway to be already present in KCP
  - patches/adjust_resources_in_deployment.yaml
  - patches/inject_istio_sidecar_in_deployment.yaml

components:
  - ../crd
  - ../rbac
  # [WATCHER] To enable the watcher, uncomment all the sections with [WATCHER]
  - ../watcher
  # [ISTIO] To enable istio, uncomment all sections with 'ISTIO'.
  - ../istio
  # [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix including the one in
  # crd/kustomization.yaml
  #- ../webhook
  # [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER'. 'WEBHOOK' components are required.
  #- ../certmanager
  # [PROMETHEUS] To enable prometheus monitor, uncomment all sections with 'PROMETHEUS'.
  - ../prometheus
  # [GRAFANA] To generate configmap for provision grafana dashboard
  - ../grafana