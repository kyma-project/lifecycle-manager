# WARNING: This is a Kustomization that CANNOT run standalone
# It is meant to be used in conjunction with a control-plane deployment only and has prerequisites that
# need to be explicitly created externally in a centrally managed place (e.g. the kcp-system).
# In fact, in order to avoid conflicts, it even explicitly patches out certain configuration elements.
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Adds namespace to all resources.
namespace: kcp-system

namePrefix: klm- #kyma-lifecycle-manager
# Labels to add to all resources and selectors.
commonLabels:
  app.kubernetes.io/instance: kcp-lifecycle-manager
  app.kubernetes.io/name: lifecycle-manager
  app.kubernetes.io/created-by: argo-cd
  app.kubernetes.io/part-of: kcp
  app.kubernetes.io/managed-by: kustomize

images:
- name: europe-docker.pkg.dev/kyma-project/prod/lifecycle-manager

resources:
  - ../manager
  # [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER'. 'WEBHOOK' components are required.
  - ../certmanager

components:
  - ../crd
  - ../rbac
  # [ISTIO] To enable istio, uncomment all sections with 'ISTIO'.
  - ../istio
  # [WATCHER] To enable the watcher, uncomment all the sections with [WATCHER]
  #- ../watcher
  # [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK] prefix
  - ../webhook
  # [PROMETHEUS] To enable prometheus monitor, uncomment all sections with 'PROMETHEUS'.
  - ../prometheus
  # [GRAFANA] To enable grafana, uncomment all sections with 'GRAFANA'.
  - ../grafana

patches:
  - patch: |-
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: --in-kcp-mode
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: --rate-limiter-burst=2000
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: --rate-limiter-frequency=1000      
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: --k8s-client-qps=1000      
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: --k8s-client-burst=2000
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: --cache-sync-timeout=60m
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: --failure-max-delay=30s
      - op: add
        path: /spec/template/spec/containers/0/args/-
        value: --is-kyma-managed
    target:
      kind: Deployment
    # We expect a kcp-system namespace to be already present in KCP
  - path: patches/namespace_delete.yaml
    # For prometheus scraping in KCP, serviceMonitor better enable mTls for communication
  - path: patches/service_monitor.yaml
    # [WEBHOOK] To enable webhook, uncomment all the sections with [WEBHOOK]
  - path: patches/unique_manager_webhook_patch.yaml
  - path: patches/adjust_resources_in_deployment.yaml
    # [CERTMANAGER] To enable cert-manager, uncomment all sections with 'CERTMANAGER'.
    # Uncomment 'CERTMANAGER' sections in crd/kustomization.yaml to enable the CA injection in the admission webhooks.
    # 'CERTMANAGER' needs to be enabled to use ca injection
  - path: patches/webhook_configuration_cainjection.yaml
    # We override the certificate name to ensure that Cert-Manager uses a unique cert in conjunction with other
    # kubebuilder operators.
  - path: patches/unique_certificate_name.yaml

# We patch the Metrics ConfigMaps here, as we expect KCP to be watching for grafana dashboards in the 'kyma-system' namespace
# instead of 'kcp-system', as configured above with the global namespace transformer.
# Note1: Now as the 'patchesJson6902' is deprecated, the direct use of the 'PatchTransformer' is the only way to change a resource namespace to something different from the value configured by the global namespace transformer.
# Note2: the 'grafana_dashboard' label could be applied using a standard JSON patch, but a namespace must be patched here and it's better to have all related customizations in a single place. 
transformers:
- |-
  apiVersion: builtin
  kind: PatchTransformer
  metadata:
    name: fix-overview-cm
  patch: '[{"op": "replace", "path": "/metadata/namespace", "value": "kyma-system"}, {"op": "add", "path": "/metadata/labels/grafana_dashboard", "value": "1"}]'
  target:
    kind: ConfigMap
    name: klm-overview
    version: v1
- |-
  apiVersion: builtin
  kind: PatchTransformer
  metadata:
    name: fix-status-cm
  patch: '[{"op": "replace", "path": "/metadata/namespace", "value": "kyma-system"}, {"op": "add", "path": "/metadata/labels/grafana_dashboard", "value": "1"}]'
  target:
    kind: ConfigMap
    name: klm-status
    version: v1

replacements:
# substitutes CERTIFICATE_NAMESPACE, the namespace of the certificate CR
- source:
    kind: Certificate
    name: serving-cert # this name should match the one in certificate.yaml
    fieldPath: metadata.namespace
  targets:
  - select:
      kind: ValidatingWebhookConfiguration
      name: validating-webhook-configuration
    fieldpaths:
    - metadata.annotations.[cert-manager.io/inject-ca-from]
    options:
      delimiter: '/'
      index: 0
  - select:
      kind: CustomResourceDefinition
    fieldpaths:
    - metadata.annotations.[cert-manager.io/inject-ca-from]
    options:
      delimiter: '/'
      index: 0
# substitutes CERTIFICATE_NAME, the name of the certificate CR
- source:
    kind: Certificate
    name: serving-cert # this name should match the one in certificate.yaml
    fieldPath: metadata.name
  targets:
  - select:
      kind: ValidatingWebhookConfiguration
      name: validating-webhook-configuration
    fieldpaths:
    - metadata.annotations.[cert-manager.io/inject-ca-from]
    options:
      delimiter: '/'
      index: 1
  - select:
      kind: CustomResourceDefinition
    fieldpaths:
    - metadata.annotations.[cert-manager.io/inject-ca-from]
    options:
      delimiter: '/'
      index: 1
# substitutes SERVICE_NAMESPACE, the namespace of the service
- source:
    kind: Service
    version: v1
    name: webhook-service
    fieldpath: metadata.namespace
  targets:
  - select:
      group: cert-manager.io
      version: v1
      kind: Certificate
      name: serving-cert
    fieldpaths:
    - spec.dnsNames.0
    - spec.dnsNames.1
    options:
      delimiter: '.'
      index: 1
# substitutes SERVICE_NAME, the name of the service
- source:
    kind: Service
    version: v1
    name: webhook-service
    fieldpath: metadata.name
  targets:
  - select:
      group: cert-manager.io
      version: v1
      kind: Certificate
      name: serving-cert
    fieldpaths:
    - spec.dnsNames.0
    - spec.dnsNames.1
    options:
      delimiter: '.'
      index: 0
