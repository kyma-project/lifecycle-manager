name: Deploy template-operator
description: Deploys a test-specific template-operator.
runs:
  using: composite
  steps:
    - name: Setup HTTPS server for the manifest file
      uses: ./lifecycle-manager/.github/actions/setup-https-server
      with:
        directory_name: ../template-operator
    - name: Create Template Operator Module and apply
      working-directory: template-operator
      if: ${{ matrix.e2e-test == 'kyma-metrics' ||
        matrix.e2e-test == 'non-blocking-deletion' ||
        matrix.e2e-test == 'purge-controller' ||
        matrix.e2e-test == 'purge-metrics' ||
        matrix.e2e-test == 'kyma-deprovision-with-foreground-propagation' ||
        matrix.e2e-test == 'kyma-deprovision-with-background-propagation' ||
        matrix.e2e-test == 'module-consistency' ||
        matrix.e2e-test == 'skip-manifest-reconciliation' ||
        matrix.e2e-test == 'misconfigured-kyma-secret' ||
        matrix.e2e-test == 'unmanage-module' ||
        matrix.e2e-test == 'labelling'
        }}
      shell: bash
      run: |
        modulectl create --config-file ./module-config.yaml --registry http://localhost:5111 --insecure
        sed -i 's/localhost:5111/k3d-kcp-registry.localhost:5000/g' ./template.yaml
        sed -i '/^spec:/a\  channel: regular\n' ./template.yaml
        kubectl get crds
        kubectl apply -f template.yaml
    - name: Create Template Operator Module for regular and fast channels
      working-directory: lifecycle-manager
      if: ${{ matrix.e2e-test == 'module-upgrade-channel-switch' || 
        matrix.e2e-test == 'module-upgrade-new-version' || 
        matrix.e2e-test == 'upgrade-under-deletion' 
        }}
      shell: bash
      run: |
        kubectl apply -f tests/e2e/moduletemplate/moduletemplate_template_operator_v2_fast.yaml
        kubectl apply -f tests/e2e/moduletemplate/moduletemplate_template_operator_v1_regular.yaml
    - name: Create Template Operator Module for installation by version
      working-directory: lifecycle-manager
      if: ${{ matrix.e2e-test == 'module-install-by-version' }}
      shell: bash
      run: |
        kubectl apply -f tests/e2e/moduletemplate/moduletemplate_template_operator_v2_fast.yaml
        kubectl apply -f tests/e2e/moduletemplate/moduletemplate_template_operator_v1_regular.yaml
        kubectl apply -f tests/e2e/moduletemplate/moduletemplate_template_operator_v2_direct_version.yaml
    - name: Create Template Operator Module as Mandatory Module
      working-directory: lifecycle-manager
      if: ${{ matrix.e2e-test == 'mandatory-module-with-old-naming-pattern' ||
        matrix.e2e-test == 'mandatory-module-metrics-with-old-naming-pattern' 
        }}
      shell: bash
      run: |
        kubectl apply -f tests/e2e/moduletemplate/mandatory_moduletemplate_template_operator_v1.yaml
    - name: Apply Template Operator Module V2, fast channel
      working-directory: ./lifecycle-manager
      if: ${{ matrix.e2e-test == 'non-blocking-deletion' }}
      shell: bash
      run: |
        kubectl apply -f tests/e2e/moduletemplate/moduletemplate_template_operator_v2_fast.yaml
    - name: Create Template Operator Module with Deployment, with final state and final deletion state as `Warning` and apply
      working-directory: template-operator
      if: ${{ matrix.e2e-test == 'module-status-decoupling-with-deployment'}}
      shell: bash
      run: |
        pushd config/overlays/deployment
        echo \
        "- op: replace
          path: /spec/template/spec/containers/0/args/1
          value: --final-state=Warning
        - op: replace
          path: /spec/template/spec/containers/0/args/2
          value: --final-deletion-state=Warning" >> warning_patch.yaml
        cat warning_patch.yaml
        kustomize edit add patch --path warning_patch.yaml --kind Deployment
        popd
        make build-manifests
        echo "name: kyma-project.io/module/template-operator
        version: 1.0.1
        security: sec-scanners-config.yaml
        defaultCR: https://github.com/kyma-project/template-operator/releases/download/1.0.1/default-sample-cr.yaml
        manifest: https://localhost:8080/template-operator.yaml
        repository: https://github.com/kyma-project/template-operator
        documentation: https://github.com/kyma-project/template-operator/blob/main/README.md
        icons:
        - name: module-icon
          link: https://github.com/kyma-project/template-operator/blob/main/docs/assets/logo.png" >> warning-module-config.yaml
        modulectl create --config-file ./warning-module-config.yaml --registry http://localhost:5111 --insecure
        sed -i '/^spec:/a\  channel: regular\n' ./template.yaml
        sed -i 's/localhost:5111/k3d-kcp-registry.localhost:5000/g' ./template.yaml
        kubectl get crds
        kubectl apply -f template.yaml
    - name: Create Template Operator Module with StatefulSet, with final state and final deletion state as `Warning` and apply
      working-directory: template-operator
      if: ${{ matrix.e2e-test == 'module-status-decoupling-with-statefulset'}}
      shell: bash
      run: |
        pushd config/overlays/statefulset
        echo \
        "- op: replace
          path: /spec/template/spec/containers/0/args/1
          value: --final-state=Warning
        - op: replace
          path: /spec/template/spec/containers/0/args/2
          value: --final-deletion-state=Warning" >> warning_patch.yaml
        cat warning_patch.yaml
        kustomize edit add patch --path warning_patch.yaml --kind StatefulSet
        popd
        make build-statefulset-manifests
        echo "name: kyma-project.io/module/template-operator
        version: 1.0.1
        security: sec-scanners-config.yaml
        defaultCR: https://github.com/kyma-project/template-operator/releases/download/1.0.1/default-sample-cr.yaml
        manifest: https://localhost:8080/template-operator.yaml
        repository: https://github.com/kyma-project/template-operator
        documentation: https://github.com/kyma-project/template-operator/blob/main/README.md
        icons:
        - name: module-icon
          link: https://github.com/kyma-project/template-operator/blob/main/docs/assets/logo.png" >> warning-module-config.yaml
        modulectl create --config-file ./warning-module-config.yaml --registry http://localhost:5111 --insecure
        sed -i '/^spec:/a\  channel: regular\n' ./template.yaml
        sed -i 's/localhost:5111/k3d-kcp-registry.localhost:5000/g' ./template.yaml
        kubectl get crds
        kubectl apply -f template.yaml
    - name: Create non-working image patch for Template Operator Module and create associated module config file
      working-directory: template-operator
      if: ${{ matrix.e2e-test == 'module-status-decoupling-with-deployment'||
        matrix.e2e-test == 'module-status-decoupling-with-statefulset'}}
      shell: bash
      run: |
        echo "name: kyma-project.io/module/template-operator-misconfigured
        version: 1.1.1
        manifest: https://localhost:8080/template-operator.yaml
        security: sec-scanners-config.yaml
        defaultCR: https://github.com/kyma-project/template-operator/releases/download/1.0.1/default-sample-cr.yaml
        repository: https://github.com/kyma-project/template-operator
        documentation: https://github.com/kyma-project/template-operator/blob/main/README.md
        icons:
        - name: module-icon
          link: https://github.com/kyma-project/template-operator/blob/main/docs/assets/logo.png" >> misconfigured-module-config.yaml
    - name: Create Template Operator Module with Deployment, with non-working image and apply
      working-directory: template-operator
      if: ${{ matrix.e2e-test == 'module-status-decoupling-with-deployment'}}
      shell: bash
      run: |
        pushd config/overlays/deployment
        echo \
        "- op: replace
          path: /spec/template/spec/containers/0/image
          value: non-working-path" >> image_patch.yaml
        cat image_patch.yaml
        kustomize edit add patch --path image_patch.yaml --kind Deployment
        popd
        make build-manifests
        modulectl create --config-file ./misconfigured-module-config.yaml --registry http://localhost:5111 --insecure
        sed -i '/^spec:/a\  channel: regular\n' ./template.yaml
        sed -i 's/localhost:5111/k3d-kcp-registry.localhost:5000/g' ./template.yaml
        kubectl get crds
        kubectl apply -f template.yaml
    - name: Create Template Operator Module with StatefulSet, with non-working image and apply
      working-directory: template-operator
      if: ${{ matrix.e2e-test == 'module-status-decoupling-with-statefulset'}}
      shell: bash
      run: |
        pushd config/overlays/statefulset
        echo \
        "- op: replace
          path: /spec/template/spec/containers/0/image
          value: non-working-path" >> image_patch.yaml
        cat image_patch.yaml
        kustomize edit add patch --path image_patch.yaml --kind StatefulSet
        popd
        make build-statefulset-manifests
        modulectl create --config-file ./misconfigured-module-config.yaml --registry http://localhost:5111 --insecure
        sed -i '/^spec:/a\  channel: regular\n' ./template.yaml
        sed -i 's/localhost:5111/k3d-kcp-registry.localhost:5000/g' ./template.yaml
        kubectl get crds
        kubectl apply -f template.yaml
    - name: Create Template Operator Module without default CR and apply
      working-directory: template-operator
      if: ${{ matrix.e2e-test == 'module-without-default-cr' }}
      shell: bash
      run: |
        make build-manifests
        echo "name: kyma-project.io/module/template-operator
        version: 1.0.0
        manifest: https://localhost:8080/template-operator.yaml
        security: sec-scanners-config.yaml
        repository: https://github.com/kyma-project/template-operator
        documentation: https://github.com/kyma-project/template-operator/blob/main/README.md
        icons:
        - name: module-icon
          link: https://github.com/kyma-project/template-operator/blob/main/docs/assets/logo.png" >> module-config-no-cr.yaml
        modulectl create --config-file ./module-config-no-cr.yaml --registry http://localhost:5111 --insecure
        sed -i '/^spec:/a\  channel: regular\n' ./template.yaml
        sed -i 's/localhost:5111/k3d-kcp-registry.localhost:5000/g' ./template.yaml
        kubectl get crds
        kubectl apply -f template.yaml
    - name: Apply Template Operator Module in OCM format
      working-directory: ./lifecycle-manager
      if: ${{ matrix.e2e-test == 'ocm-compatible-module-template' }}
      shell: bash
      run: |
        kubectl apply -f tests/e2e/moduletemplate/moduletemplate_template_operator_regular_new_ocm.yaml

